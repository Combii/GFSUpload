// <auto-generated />
using GFSUploadAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GFSUploadAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200312181629_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("GFSUploadAPI.Models.AccountBookKeeping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("CounterAccountIDKT")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("IDKT")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalIDKT")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegistrationNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AccountBookKeeping");
                });

            modelBuilder.Entity("GFSUploadAPI.Models.BookKeeping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dato")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tekst")
                        .HasColumnType("TEXT");

                    b.Property<string>("dkkbass")
                        .HasColumnType("TEXT");

                    b.Property<string>("kngr")
                        .HasColumnType("TEXT");

                    b.Property<string>("kngr_typ")
                        .HasColumnType("TEXT");

                    b.Property<string>("ldkd")
                        .HasColumnType("TEXT");

                    b.Property<string>("leveran_kor")
                        .HasColumnType("TEXT");

                    b.Property<string>("leveran_type")
                        .HasColumnType("TEXT");

                    b.Property<string>("opdater_lev")
                        .HasColumnType("TEXT");

                    b.Property<string>("pdst")
                        .HasColumnType("TEXT");

                    b.Property<string>("regnskabstype")
                        .HasColumnType("TEXT");

                    b.Property<string>("saldo")
                        .HasColumnType("TEXT");

                    b.Property<string>("skema_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("skemarakke")
                        .HasColumnType("TEXT");

                    b.Property<string>("sum_rgopid")
                        .HasColumnType("TEXT");

                    b.Property<string>("valutakod")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BookKeeping");
                });
#pragma warning restore 612, 618
        }
    }
}
